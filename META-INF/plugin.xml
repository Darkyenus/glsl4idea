<!--
  ~ Copyright 2010 Jean-Paul Balabanian and Yngve Devik Hammersland
  ~
  ~     This file is part of glsl4idea.
  ~
  ~     Glsl4idea is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Lesser General Public License as
  ~     published by the Free Software Foundation, either version 3 of
  ~     the License, or (at your option) any later version.
  ~
  ~     Glsl4idea is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Lesser General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with glsl4idea.  If not, see <http://www.gnu.org/licenses/>.
  -->
<idea-plugin version="2">

    <name>GLSL Support</name>
    <id>GLSL</id>
    <description>Support for the OpenGL Shading Language</description>

    <category>Custom Languages</category>
    <vendor>Foundation</vendor>
    <idea-version since-build="139.1117"/>
    <depends>com.intellij.modules.lang</depends>

    <version>1.8</version>
    <change-notes><![CDATA[

        <p>1.9</p>
        <ul>
            <li>Add type checking for conditional expressions</li>
            <li>Fix issues with return types</li>
            <li>Improve unreachable statement marking</li>
        </ul>

        <p>1.8</p>
        <ul>
            <li>Support for basic #define token replacement (everything except function-like)</li>
            <li>Parse "layout qualifier statements"</li>
            <li>Handling syntax and grammar errors is more robust</li>
            <li>Fix variable declarations with already-defined struct types not parsing correctly</li>
            <li>Improve highlighting of GLES precision statements</li>
        </ul>

        <p>1.7.1</p>
        <ul>
            <li>Fix problem in parsing which could cause the plugin to freeze</li>
            <li>Improve handling of GLES precision statements</li>
        </ul>

        <p>1.7</p>
        <ul>
            <li>Add missing return; warning</li>
            <li>Add support for layout qualifiers</li>
            <li>Add support for interface blocks</li>
            <li>Add error highligting in Project view</li>
            <li>Add invalid initializer type warning</li>
            <li>Add support for bitwise operators</li>
            <li>Fix Convert Vector Components action</li>
        </ul>

        <p>1.6</p>
        <ul>
            <li>Improved unreachability analyzing</li>
            <li>Recognize more file extensions</li>
            <li>Improved token lexing around #if preprocessor statements</li>
            <li>Added support for more native types (uint, double, uvec, dvec, dmat)</li>
        </ul>

        <p>1.5</p>
        <ul>
            <li>Brace folding for compound statements</li>
            <li>Added more qualifiers from glsl 450</li>
            <li>Improved highlighting, especially on dark themes</li>
            <li>Parsing is a bit more robust</li>
        </ul>

        <p>1.4</p>
        <ul>
            <li>Added support for GL ES precision modifiers and statements</li>
        </ul>

        <p>1.3</p>
        <ul>
            <li>Fixed compatibility with CLion</li>
            <li>Fix minor bugs</li>
        </ul>

        <p>Notable older changes<p>
        <ul>
            <li>Update to support Intellij 14</li>
            <li>Update color scheme handling</li>
        </ul>
    ]]></change-notes>

    <actions>
        <action id="GLSL_DEDUCE_EXPRESSION_TYPE"
                class="glslplugin.actions.GLSLDeduceExpressionTypeAction"
                text="Deduce Expression Type"
                description="Tries to deduce the type of the expression in the selection.">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt T"
                               second-keystroke="shift ctrl alt D"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
        <fileTypeFactory implementation="glslplugin.GLSLSupportLoader"/>
        <colorSettingsPage implementation="glslplugin.GLSLColorAndFontsPage"/>
        <lang.syntaxHighlighterFactory key="GLSL" implementationClass="glslplugin.GLSLHighlighterFactory"/>
        <lang.braceMatcher language="GLSL" implementationClass="glslplugin.GLSLPairedBraceMatcher"/>
        <lang.parserDefinition language="GLSL" implementationClass="glslplugin.lang.GLSLParserDefinition"/>
        <lang.foldingBuilder language="GLSL" implementationClass="glslplugin.GLSLFoldingBuilder"/>
        <lang.psiStructureViewFactory language="GLSL"
                                      implementationClass="glslplugin.structureview.GLSLStructureViewFactory"/>
        <annotator language="GLSL" implementationClass="glslplugin.annotation.GLSLAnnotator"/>
        <problemFileHighlightFilter implementation="glslplugin.extensions.GLSLProblemFileHighlightFilter" />

        <intentionAction>
            <className>glslplugin.intentions.vectorcomponents.VectorComponentsIntention</className>
            <category>GLSL</category>
        </intentionAction>
        <codeInsight.lineMarkerProvider language="GLSL"
                                        implementationClass="glslplugin.extensions.GLSLLineMarkerProvider"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/GLSLDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/GLSLDarcula.xml"/>
        <lang.commenter language="GLSL" implementationClass="glslplugin.GLSLCommenter"/>
    </extensions>

    <application-components>
        <!--todo:Loading the templates component causes a memory leak?-->
        <component>
            <implementation-class>glslplugin.components.GLSLTemplatesLoader</implementation-class>
        </component>
    </application-components>

</idea-plugin>
