<!--
  ~ Copyright 2010 Jean-Paul Balabanian and Yngve Devik Hammersland
  ~ Copyright 2021 Jan PolÃ¡k
  ~
  ~     This file is part of glsl4idea.
  ~
  ~     Glsl4idea is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Lesser General Public License as
  ~     published by the Free Software Foundation, either version 3 of
  ~     the License, or (at your option) any later version.
  ~
  ~     Glsl4idea is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Lesser General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with glsl4idea.  If not, see <http://www.gnu.org/licenses/>.
  -->
<idea-plugin>

    <name>GLSL Support</name>
    <id>GLSL</id>
    <description>Support for GLSL - the OpenGL Shading Language</description>

    <category>Custom Languages</category>
    <vendor>Foundation</vendor>

    <!-- https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html -->
    <!-- Since at least 144 (2016), because we require Java 8, which is bundled since then -->
    <!-- https://intellij-support.jetbrains.com/hc/en-us/articles/206544879-Selecting-the-JDK-version-the-IDE-will-run-under -->
    <!-- Until build is not set, because we hope it will work. -->
    <idea-version since-build="203.5981.155"/>
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>

    <change-notes><![CDATA[
        <ul>
            <li></li>
        </ul>
    ]]></change-notes>

    <actions>
        <action id="GLSL_DEDUCE_EXPRESSION_TYPE"
                class="glslplugin.actions.GLSLDeduceExpressionTypeAction"
                text="Deduce Expression Type"
                description="Tries to deduce the type of the expression in the selection.">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt T"
                               second-keystroke="shift ctrl alt D"/>
        </action>

        <action id="GLSL_NEW_SHADER_FILE" class="glslplugin.actions.GLSLCreateNewShaderFile"
                text="GLSL Shader" description="Create new GLSL shader file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="GLSL shader" language="GLSL" extensions="glsl;frag;fsh;vert;vsh;tesc;tese;geom;comp;shader" implementationClass="glslplugin.lang.GLSLFileType" fieldName="INSTANCE" />
        <colorSettingsPage implementation="glslplugin.GLSLColorAndFontsPage"/>
        <lang.syntaxHighlighterFactory language="GLSL" implementationClass="glslplugin.GLSLHighlighterFactory"/>
        <lang.braceMatcher language="GLSL" implementationClass="glslplugin.GLSLPairedBraceMatcher"/>
        <lang.parserDefinition language="GLSL" implementationClass="glslplugin.lang.GLSLParserDefinition"/>
        <lang.foldingBuilder language="GLSL" implementationClass="glslplugin.GLSLFoldingBuilder"/>
        <lang.psiStructureViewFactory language="GLSL"
                                      implementationClass="glslplugin.structureview.GLSLStructureViewFactory"/>
        <annotator language="GLSL" implementationClass="glslplugin.annotation.GLSLAnnotator"/>
        <problemFileHighlightFilter implementation="glslplugin.extensions.GLSLProblemFileHighlightFilter" />
        <codeInsight.parameterInfo language="GLSL" implementationClass="glslplugin.extensions.GLSLParameterInfoHandler" />

        <intentionAction>
            <className>glslplugin.intentions.vectorcomponents.VectorComponentsIntention</className>
            <category>GLSL</category>
        </intentionAction>
        <codeInsight.lineMarkerProvider language="GLSL"
                                        implementationClass="glslplugin.extensions.GLSLLineMarkerProvider"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/GLSLDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/GLSLDarcula.xml"/>
        <lang.commenter language="GLSL" implementationClass="glslplugin.GLSLCommenter"/>
        <lang.refactoringSupport language="GLSL" implementationClass="glslplugin.extensions.GLSLRefactoringSupportProvider" />
        <lang.findUsagesProvider language="GLSL" implementationClass="glslplugin.extensions.GLSLFindUsagesProvider" />
        <lang.documentationProvider language="GLSL" implementationClass="glslplugin.extensions.GLSLDocumentationProvider"/>
        <completion.contributor language="GLSL" implementationClass="glslplugin.extensions.GLSLCompletionContributor" />
        <elementDescriptionProvider implementation="glslplugin.extensions.GLSLDescriptionProvider" />
        <enterBetweenBracesDelegate language="GLSL" implementationClass="glslplugin.extensions.GLSLEnterHandlerDelegate" />
        <lang.formatter language="GLSL" implementationClass="glslplugin.formatter.GLSLFormattingModelBuilder" />

        <createFromTemplateHandler implementation="glslplugin.GLSLCreateFromTemplateHandler"/>
        <internalFileTemplate name="GLSL Shader"/>
        <internalFileTemplate name="GLSL Fragment Shader"/>
        <internalFileTemplate name="GLSL Vertex Shader"/>

        <langCodeStyleSettingsProvider implementation="glslplugin.formatter.GLSLCodeStyleSettingsProvider"/>
    </extensions>
</idea-plugin>
